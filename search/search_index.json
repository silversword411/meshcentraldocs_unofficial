{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MeshCentral Documentation \u00b6 About \u00b6 MeshCentral is a full computer management web site. With MeshCentral, you can run your own web server to remotely manage and control computers on a local network or anywhere on the internet. Once you get the server started, create device group and download and install an agent on each computer you want to manage. A minute later, the new computer will show up on the web site and you can take control of it. MeshCentral includes full web-based remote desktop, terminal and file management capability. To try out this software on the public server, please visit MeshCentral.com/login . Be mindful that the public MeshCentral server comes with no guaranties, most should setup their own server. For more information, visit MeshCentral.com . Social Media \u00b6 YouTube Reddit Twitter BlogSpot Documentation \u00b6 The User's Guide contains information every adminstrator should know including usage, the server configuration file, databases, TLS offloading, Lets Encrypt, IP Filtering, Email setup, embedding, server port aliasing, reverse proxy setup, multi factor authentication, branding & terms of use, HashiCorp Vault support, and SSO. The Installation Guide has detailed instructions for installing the MeshCentral Server on Windows 8.1, Windows 10, Windows 2012 R2, Amazon Linux 2, Raspberry Pi, Microsoft Azure, Google Cloud, Ubuntu 18, Ubuntu 16 and OpenBSD. The Design and Architecture Guide is a short document that includes information on the design overview, dependencies, source code descriptions of each file, certificates, TLS security, the agent to server handshake, browser to agent relay and WebRTC and the messenger service. Video Tutorials \u00b6 You can watch many tutorial videos on the MeshCentral YouTube Channel . Two videos to get started involve installation and basic usages. Installing MeshCentral on Windows, Linux and macOS. MeshCentral - Installation Basic Usages including installing the agent and remote desktop, terminal and file access. MeshCentral - Basics MeshCentral support for two-factor authentication. MeshCentral - Two Factor Authentication How to setup MeshCentral with the NGINX reverse proxy. MeshCentral - NGINX Reverse Proxy Installing and using the MeshCentral Android agent. MeshCentral - Android Using MeshCentral Router to port map TCP connections. MeshCentral - Basics Feedback \u00b6 If you encounter a problem or have a suggestion to improve the product, you may file an issue report If you are filing a problem report, you should include: The version of the software you are using The Operating System and version The observed output The expected output Any troubleshooting you took to resolve the issue yourself Any other similar reports~~ If you are having issues with the following other products, you should file a report on their respective issue pages MeshAgent MeshRouter License This software is licensed under Apache 2.0 .","title":"Home"},{"location":"#meshcentral-documentation","text":"","title":"MeshCentral Documentation"},{"location":"#about","text":"MeshCentral is a full computer management web site. With MeshCentral, you can run your own web server to remotely manage and control computers on a local network or anywhere on the internet. Once you get the server started, create device group and download and install an agent on each computer you want to manage. A minute later, the new computer will show up on the web site and you can take control of it. MeshCentral includes full web-based remote desktop, terminal and file management capability. To try out this software on the public server, please visit MeshCentral.com/login . Be mindful that the public MeshCentral server comes with no guaranties, most should setup their own server. For more information, visit MeshCentral.com .","title":"About"},{"location":"#social-media","text":"YouTube Reddit Twitter BlogSpot","title":"Social Media"},{"location":"#documentation","text":"The User's Guide contains information every adminstrator should know including usage, the server configuration file, databases, TLS offloading, Lets Encrypt, IP Filtering, Email setup, embedding, server port aliasing, reverse proxy setup, multi factor authentication, branding & terms of use, HashiCorp Vault support, and SSO. The Installation Guide has detailed instructions for installing the MeshCentral Server on Windows 8.1, Windows 10, Windows 2012 R2, Amazon Linux 2, Raspberry Pi, Microsoft Azure, Google Cloud, Ubuntu 18, Ubuntu 16 and OpenBSD. The Design and Architecture Guide is a short document that includes information on the design overview, dependencies, source code descriptions of each file, certificates, TLS security, the agent to server handshake, browser to agent relay and WebRTC and the messenger service.","title":"Documentation"},{"location":"#video-tutorials","text":"You can watch many tutorial videos on the MeshCentral YouTube Channel . Two videos to get started involve installation and basic usages. Installing MeshCentral on Windows, Linux and macOS. MeshCentral - Installation Basic Usages including installing the agent and remote desktop, terminal and file access. MeshCentral - Basics MeshCentral support for two-factor authentication. MeshCentral - Two Factor Authentication How to setup MeshCentral with the NGINX reverse proxy. MeshCentral - NGINX Reverse Proxy Installing and using the MeshCentral Android agent. MeshCentral - Android Using MeshCentral Router to port map TCP connections. MeshCentral - Basics","title":"Video Tutorials"},{"location":"#feedback","text":"If you encounter a problem or have a suggestion to improve the product, you may file an issue report If you are filing a problem report, you should include: The version of the software you are using The Operating System and version The observed output The expected output Any troubleshooting you took to resolve the issue yourself Any other similar reports~~ If you are having issues with the following other products, you should file a report on their respective issue pages MeshAgent MeshRouter License This software is licensed under Apache 2.0 .","title":"Feedback"},{"location":"downloads/","text":"Downloads \u00b6 Tools Downloads \u00b6 Mobile Downloads \u00b6 MeshCmd Downloads \u00b6","title":"Downloads"},{"location":"downloads/#downloads","text":"","title":"Downloads"},{"location":"downloads/#tools-downloads","text":"","title":"Tools Downloads"},{"location":"downloads/#mobile-downloads","text":"","title":"Mobile Downloads"},{"location":"downloads/#meshcmd-downloads","text":"","title":"MeshCmd Downloads"},{"location":"design/","text":"Design and Architecture \u00b6 Design and Architecture Guide Video Walkthru \u00b6","title":"Design and Architecture"},{"location":"design/#design-and-architecture","text":"Design and Architecture Guide","title":"Design and Architecture"},{"location":"design/#video-walkthru","text":"","title":"Video Walkthru"},{"location":"install/","text":"Installation \u00b6 Getting started is easy. If you don't have it already, install NodeJS. Then, create an empty folder and do this: npm install meshcentral node node_modules/meshcentral That's it. MeshCentral will set itself up and start managing computers on your local network. By default it will be setup in LAN mode and agents you install will multicast on the local network to find the server. To setup the server so that agents use a well known DNS name and to start customizing your server, go in the \"meshcentral-data\" folder and edit the config.json file. The configuration file must be valid JSON, you can use this link to validate the file format. For Windows users, you can download the MeshCentral Installer that will automate installation of NodeJS and provide basic configuration of the server. This option is not recommended for advanced users. Win32 MeshCentral Installer By default, MeshCentral will use NeDB as this is the built-in database. For more advanced users, it's recommended to switch to using MongoDB. MeshCentral can be installed on a very small server. A Raspberry Pi or AWS t3.nano running Amazon Linux 2 instance for 5$ a month will do just fine for managing up to a few hundred devices. You can run the MeshCentral Server with --help to get options for background installation. Configuration \u00b6 Once you get MeshCentral installed, the first user account that is created will be the server administrator. So, don't delay and navigate to the login page and create a new account. You can then start using your server right away. A lot of the fun with MeshCentral is the 100's of configuration options that are available in the config.json file. You can put your own branding on the web pages, setup a SMTP email server, SMS services and much more. You can look here for simple config.json , here for a more advanced configuration and here for all possible configuration options . You can also take a look at the MeshCentral User's Guide and tutorial videos for additional help.","title":"Installation"},{"location":"install/#installation","text":"Getting started is easy. If you don't have it already, install NodeJS. Then, create an empty folder and do this: npm install meshcentral node node_modules/meshcentral That's it. MeshCentral will set itself up and start managing computers on your local network. By default it will be setup in LAN mode and agents you install will multicast on the local network to find the server. To setup the server so that agents use a well known DNS name and to start customizing your server, go in the \"meshcentral-data\" folder and edit the config.json file. The configuration file must be valid JSON, you can use this link to validate the file format. For Windows users, you can download the MeshCentral Installer that will automate installation of NodeJS and provide basic configuration of the server. This option is not recommended for advanced users. Win32 MeshCentral Installer By default, MeshCentral will use NeDB as this is the built-in database. For more advanced users, it's recommended to switch to using MongoDB. MeshCentral can be installed on a very small server. A Raspberry Pi or AWS t3.nano running Amazon Linux 2 instance for 5$ a month will do just fine for managing up to a few hundred devices. You can run the MeshCentral Server with --help to get options for background installation.","title":"Installation"},{"location":"install/#configuration","text":"Once you get MeshCentral installed, the first user account that is created will be the server administrator. So, don't delay and navigate to the login page and create a new account. You can then start using your server right away. A lot of the fun with MeshCentral is the 100's of configuration options that are available in the config.json file. You can put your own branding on the web pages, setup a SMTP email server, SMS services and much more. You can look here for simple config.json , here for a more advanced configuration and here for all possible configuration options . You can also take a look at the MeshCentral User's Guide and tutorial videos for additional help.","title":"Configuration"},{"location":"intelamt/","text":"Intel AMT \u00b6 Intel AMT Guide Video Walkthru \u00b6","title":"Intel AMT"},{"location":"intelamt/#intel-amt","text":"Intel AMT Guide","title":"Intel AMT"},{"location":"intelamt/#video-walkthru","text":"","title":"Video Walkthru"},{"location":"meshcentral/","text":"Meshcentral2 Guide \u00b6 MeshCentral2 Guide Video Walkthru \u00b6","title":"Meshcentral2 Guide"},{"location":"meshcentral/#meshcentral2-guide","text":"MeshCentral2 Guide","title":"Meshcentral2 Guide"},{"location":"meshcentral/#video-walkthru","text":"","title":"Video Walkthru"},{"location":"meshcentral/debugging/","text":"Youtube video about websockets: https://youtu.be/3vI4URd3VzU Trace=1 as a parameter in chrome dev tools for debugging To log all database queries, change log_statement in /etc/postgresql/13/main/postgresql.conf # CUSTOM log_statement = 'all' # none, ddl, mod, all The stacktrace was logged to stdout/journalctl . Supposedly, you can enable debug logging for node modules by adding DEBUG=<modulename> to the environment. Adding this to /etc/systemd/system/meshcentral.service should do it but it didn't seem to do anything. I think that's because Mesh uses the trace logging in the browser instead of logging things in the server logs. Environment=DEBUG=mesh* If you want to change node to meshcentral in journalctl, add this to /etc/systemd/system/meshcentral.service. SyslogIdentifier=meshcentral Logging it all \u00b6 To log everything that's possible, prepare the log directory. mkdir /meshcentral/meshcentral-logs/ chown tactical:tactical logs ln -s ../meshcentral-logs/log.txt /meshcentral/meshcentral-data/log.txt And then add this to your config. \"meshErrorLogPath\" : \"/meshcentral/meshcentral-logs/\" , \"authLog\" : \"/meshcentral/meshcentral-logs/auth.log\" , \"log\" : [ \"cookie\" , \"dispatch\" , \"main\" , \"peer\" , \"web\" , \"webrequest\" , \"relay\" , \"webrelaydata\" , \"webrelay\" , \"mps\" , \"mpscmd\" , \"swarm\" , \"swarmcmd\" , \"agentupdate\" , \"agent\" , \"cert\" , \"db\" , \"email\" , \"amt\" , \"httpheaders\" , \"websocket\" ], You'll then have 3 files: -rw-rw-r-- 1 tactical tactical 2593 Feb 2 12 :22 auth.log -rw-r--r-- 1 tactical tactical 147593 Feb 2 12 :31 log.txt -rw-rw-r-- 1 tactical tactical 381 Feb 2 12 :02 mesherrors.txt And to make it truly log everything, change the following in meshcentral.js around line 3530. Old: obj.fs.writeSync(obj.xxLogFile, new Date().toLocaleTimeString() + ' - ' + source + ': ' + Array.prototype.slice.call(...args).join('') + '\\r\\n'); New: obj.fs.writeSync(obj.xxLogFile, new Date().toLocaleTimeString() + ' - ' + source + ': ' + args.join(' ') + '\\r\\n'); log.txt will now log everything in the Trace tab, but not formatted as nice. When doing debugging on my development server, I use this line in the settings section to block all agent connections except the agent I want: \"agentAllowedIp\": [ \"192.168.2.147\" ], Of course, this is just for debugging. Finding system ID types \u00b6 https://serverurl/meshagents General server statistics related \u00b6","title":"Debugging"},{"location":"meshcentral/debugging/#logging-it-all","text":"To log everything that's possible, prepare the log directory. mkdir /meshcentral/meshcentral-logs/ chown tactical:tactical logs ln -s ../meshcentral-logs/log.txt /meshcentral/meshcentral-data/log.txt And then add this to your config. \"meshErrorLogPath\" : \"/meshcentral/meshcentral-logs/\" , \"authLog\" : \"/meshcentral/meshcentral-logs/auth.log\" , \"log\" : [ \"cookie\" , \"dispatch\" , \"main\" , \"peer\" , \"web\" , \"webrequest\" , \"relay\" , \"webrelaydata\" , \"webrelay\" , \"mps\" , \"mpscmd\" , \"swarm\" , \"swarmcmd\" , \"agentupdate\" , \"agent\" , \"cert\" , \"db\" , \"email\" , \"amt\" , \"httpheaders\" , \"websocket\" ], You'll then have 3 files: -rw-rw-r-- 1 tactical tactical 2593 Feb 2 12 :22 auth.log -rw-r--r-- 1 tactical tactical 147593 Feb 2 12 :31 log.txt -rw-rw-r-- 1 tactical tactical 381 Feb 2 12 :02 mesherrors.txt And to make it truly log everything, change the following in meshcentral.js around line 3530. Old: obj.fs.writeSync(obj.xxLogFile, new Date().toLocaleTimeString() + ' - ' + source + ': ' + Array.prototype.slice.call(...args).join('') + '\\r\\n'); New: obj.fs.writeSync(obj.xxLogFile, new Date().toLocaleTimeString() + ' - ' + source + ': ' + args.join(' ') + '\\r\\n'); log.txt will now log everything in the Trace tab, but not formatted as nice. When doing debugging on my development server, I use this line in the settings section to block all agent connections except the agent I want: \"agentAllowedIp\": [ \"192.168.2.147\" ], Of course, this is just for debugging.","title":"Logging it all"},{"location":"meshcentral/debugging/#finding-system-id-types","text":"https://serverurl/meshagents","title":"Finding system ID types"},{"location":"meshcentral/debugging/#general-server-statistics-related","text":"","title":"General server statistics related"},{"location":"meshcmd/","text":"MeshCmd \u00b6 MeshCmd Command Line Tool Video Walkthru \u00b6","title":"MeshCmd"},{"location":"meshcmd/#meshcmd","text":"MeshCmd Command Line Tool","title":"MeshCmd"},{"location":"meshcmd/#video-walkthru","text":"","title":"Video Walkthru"},{"location":"meshctrl/","text":"MeshCtrl \u00b6 MeshCtrl Command Line Tool Video Walkthru \u00b6","title":"MeshCtrl"},{"location":"meshctrl/#meshctrl","text":"MeshCtrl Command Line Tool","title":"MeshCtrl"},{"location":"meshctrl/#video-walkthru","text":"","title":"Video Walkthru"},{"location":"meshrouter/","text":"MeshCentral Router \u00b6 MeshCentral Router Guide Video Walkthru \u00b6","title":"MeshCentral Router"},{"location":"meshrouter/#meshcentral-router","text":"MeshCentral Router Guide","title":"MeshCentral Router"},{"location":"meshrouter/#video-walkthru","text":"","title":"Video Walkthru"}]}